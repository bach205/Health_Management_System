generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model appointments {
  id               Int                  @id @default(autoincrement())
  patient_id       Int
  clinic_id        Int
  doctor_id        Int
  appointment_date DateTime             @db.Date
  appointment_time DateTime             @db.Time(0)
  status           appointments_status? @default(pending)
  priority         Int?                 @default(0)
  reason           String?              @db.Text
  note             String?              @db.Text
  created_at       DateTime?            @default(now()) @db.DateTime(0)
  updated_at       DateTime?            @default(now()) @db.DateTime(0)
  patients         patients             @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_ibfk_1")
  clinics          clinics              @relation(fields: [clinic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_ibfk_2")
  users            users                @relation(fields: [doctor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_ibfk_3")
  doctor_ratings   doctor_ratings[]
  queues           queues[]

  @@index([clinic_id], map: "clinic_id")
  @@index([doctor_id], map: "doctor_id")
  @@index([patient_id], map: "patient_id")
}

model available_slots {
  id           Int       @id @default(autoincrement())
  doctor_id    Int
  clinic_id    Int
  slot_date    DateTime  @db.Date
  start_time   DateTime  @db.Time(0)
  end_time     DateTime  @db.Time(0)
  is_available Boolean?  @default(true)
  created_at   DateTime? @default(now()) @db.DateTime(0)
  users        users     @relation(fields: [doctor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "available_slots_ibfk_1")
  clinics      clinics   @relation(fields: [clinic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "available_slots_ibfk_2")

  @@index([clinic_id], map: "clinic_id")
  @@index([doctor_id], map: "doctor_id")
}

model chats {
  id                            Int           @id @default(autoincrement())
  text                          String        @db.Text
  file                          String?       @db.Text
  to_id                         Int
  send_by_id                    Int
  conversation_id               Int
  created_at                    DateTime?     @default(now()) @db.DateTime(0)
  users_chats_to_idTousers      users         @relation("chats_to_idTousers", fields: [to_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "chats_ibfk_1")
  users_chats_send_by_idTousers users         @relation("chats_send_by_idTousers", fields: [send_by_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "chats_ibfk_2")
  conversations                 conversations @relation(fields: [conversation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "chats_ibfk_3")

  @@index([conversation_id], map: "conversation_id")
  @@index([send_by_id], map: "send_by_id")
  @@index([to_id], map: "to_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model clinics {
  id                                                            Int                   @id @default(autoincrement())
  name                                                          String                @db.VarChar(255)
  description                                                   String?               @db.Text
  appointments                                                  appointments[]
  available_slots                                               available_slots[]
  examination_details                                           examination_details[]
  examination_orders_examination_orders_from_clinic_idToclinics examination_orders[]  @relation("examination_orders_from_clinic_idToclinics")
  examination_orders_examination_orders_to_clinic_idToclinics   examination_orders[]  @relation("examination_orders_to_clinic_idToclinics")
  queues                                                        queues[]
  work_schedules                                                work_schedules[]
}

model conversation_participants {
  id              Int           @id @default(autoincrement())
  conversation_id Int
  user_id         Int
  conversations   conversations @relation(fields: [conversation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "conversation_participants_ibfk_1")
  users           users         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "conversation_participants_ibfk_2")

  @@unique([conversation_id, user_id], map: "unique_participant")
  @@index([user_id], map: "user_id")
}

model conversations {
  id                        Int                         @id @default(autoincrement())
  name                      String?                     @db.VarChar(255)
  created_at                DateTime?                   @default(now()) @db.DateTime(0)
  updated_at                DateTime?                   @default(now()) @db.DateTime(0)
  chats                     chats[]
  conversation_participants conversation_participants[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model doctor_ratings {
  id             Int           @id @default(autoincrement())
  doctor_id      Int
  patient_id     Int
  appointment_id Int?
  rating         Decimal       @db.Decimal(2, 1)
  comment        String?       @db.Text
  is_anonymous   Boolean?      @default(false)
  created_at     DateTime?     @default(now()) @db.DateTime(0)
  updated_at     DateTime?     @default(now()) @db.DateTime(0)
  users          users         @relation(fields: [doctor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "doctor_ratings_ibfk_1")
  patients       patients      @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "doctor_ratings_ibfk_2")
  appointments   appointments? @relation(fields: [appointment_id], references: [id], onUpdate: NoAction, map: "doctor_ratings_ibfk_3")

  @@index([appointment_id], map: "appointment_id")
  @@index([doctor_id], map: "doctor_id")
  @@index([patient_id], map: "patient_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model doctors {
  user_id   Int      @id
  specialty String?  @db.VarChar(255)
  bio       String?  @db.Text
  rating    Decimal? @default(0.0) @db.Decimal(2, 1)
  users     users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "doctors_ibfk_1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model examination_details {
  id                  Int                         @id @default(autoincrement())
  record_id           Int
  clinic_id           Int
  doctor_id           Int
  result              String?                     @db.Text
  note                String?                     @db.Text
  examined_at         DateTime?                   @db.DateTime(0)
  status              examination_details_status? @default(pending)
  examination_records examination_records         @relation(fields: [record_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "examination_details_ibfk_1")
  clinics             clinics                     @relation(fields: [clinic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "examination_details_ibfk_2")
  users               users                       @relation(fields: [doctor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "examination_details_ibfk_3")

  @@index([clinic_id], map: "clinic_id")
  @@index([doctor_id], map: "doctor_id")
  @@index([record_id], map: "record_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model examination_orders {
  id                                                 Int       @id @default(autoincrement())
  doctor_id                                          Int
  patient_id                                         Int
  from_clinic_id                                     Int
  to_clinic_id                                       Int
  total_cost                                         Decimal?  @default(0.00) @db.Decimal(10, 2)
  created_at                                         DateTime? @default(now()) @db.DateTime(0)
  users                                              users     @relation(fields: [doctor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "examination_orders_ibfk_1")
  patients                                           patients  @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "examination_orders_ibfk_2")
  clinics_examination_orders_from_clinic_idToclinics clinics   @relation("examination_orders_from_clinic_idToclinics", fields: [from_clinic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "examination_orders_ibfk_3")
  clinics_examination_orders_to_clinic_idToclinics   clinics   @relation("examination_orders_to_clinic_idToclinics", fields: [to_clinic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "examination_orders_ibfk_4")

  @@index([doctor_id], map: "doctor_id")
  @@index([from_clinic_id], map: "from_clinic_id")
  @@index([patient_id], map: "patient_id")
  @@index([to_clinic_id], map: "to_clinic_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model examination_records {
  id                                                  Int                   @id @default(autoincrement())
  patient_id                                          Int
  created_at                                          DateTime?             @default(now()) @db.DateTime(0)
  updated_at                                          DateTime?             @default(now()) @db.DateTime(0)
  symptoms                                            String?               @db.Text
  primary_doctor_id                                   Int?
  final_diagnosis                                     String?               @db.Text
  created_by_user_id                                  Int?
  examination_details                                 examination_details[]
  patients                                            patients              @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "examination_records_ibfk_1")
  users_examination_records_primary_doctor_idTousers  users?                @relation("examination_records_primary_doctor_idTousers", fields: [primary_doctor_id], references: [id], onUpdate: NoAction, map: "examination_records_ibfk_2")
  users_examination_records_created_by_user_idTousers users?                @relation("examination_records_created_by_user_idTousers", fields: [created_by_user_id], references: [id], onUpdate: NoAction, map: "examination_records_ibfk_3")
  invoice_items                                       invoice_items[]
  payments                                            payments[]
  prescriptions                                       prescriptions[]
  queues                                              queues[]

  @@index([created_by_user_id], map: "created_by_user_id")
  @@index([patient_id], map: "patient_id")
  @@index([primary_doctor_id], map: "primary_doctor_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model invoice_items {
  id                  Int                 @id @default(autoincrement())
  record_id           Int
  description         String?             @db.Text
  amount              Decimal             @db.Decimal(10, 2)
  created_at          DateTime?           @default(now()) @db.DateTime(0)
  examination_records examination_records @relation(fields: [record_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "invoice_items_ibfk_1")

  @@index([record_id], map: "record_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model patients {
  id                  Int                   @id
  identity_number     String?               @db.VarChar(50)
  created_at          DateTime?             @default(now()) @db.DateTime(0)
  updated_at          DateTime?             @default(now()) @db.DateTime(0)
  appointments        appointments[]
  doctor_ratings      doctor_ratings[]
  examination_orders  examination_orders[]
  examination_records examination_records[]
  users               users                 @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "patients_ibfk_1")
  payment_balances    payment_balances?
  payments            payments[]
  queues              queues[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model payment_balances {
  patient_id Int       @id
  balance    Decimal?  @default(0.00) @db.Decimal(10, 2)
  updated_at DateTime? @default(now()) @db.DateTime(0)
  patients   patients  @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payment_balances_ibfk_1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model payments {
  id                  Int                  @id @default(autoincrement())
  patient_id          Int
  record_id           Int?
  amount              Decimal              @db.Decimal(10, 2)
  method              payments_method?
  payment_time        DateTime?            @default(now()) @db.DateTime(0)
  note                String?              @db.Text
  is_refund           Boolean?             @default(false)
  patients            patients             @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payments_ibfk_1")
  examination_records examination_records? @relation(fields: [record_id], references: [id], onUpdate: NoAction, map: "payments_ibfk_2")

  @@index([patient_id], map: "patient_id")
  @@index([record_id], map: "record_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model prescription_items {
  id              Int           @id @default(autoincrement())
  prescription_id Int
  medicine_name   String        @db.VarChar(255)
  dosage          String?       @db.VarChar(100)
  frequency       String?       @db.VarChar(100)
  duration        String?       @db.VarChar(100)
  note            String?       @db.Text
  prescriptions   prescriptions @relation(fields: [prescription_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "prescription_items_ibfk_1")

  @@index([prescription_id], map: "prescription_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model prescriptions {
  id                  Int                  @id @default(autoincrement())
  record_id           Int
  created_at          DateTime?            @default(now()) @db.DateTime(0)
  prescription_items  prescription_items[]
  examination_records examination_records  @relation(fields: [record_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "prescriptions_ibfk_1")

  @@index([record_id], map: "record_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model queues {
  id                  Int                  @id @default(autoincrement())
  patient_id          Int
  clinic_id           Int
  record_id           Int?
  appointment_id      Int?
  status              queues_status?       @default(waiting)
  priority            Int?                 @default(0) @db.TinyInt
  registered_online   Boolean?             @default(false)
  qr_code             String?              @db.VarChar(255)
  called_at           DateTime?            @db.DateTime(0)
  created_at          DateTime?            @default(now()) @db.DateTime(0)
  appointments        appointments?        @relation(fields: [appointment_id], references: [id], onUpdate: NoAction, map: "fk_queues_appointments")
  patients            patients             @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "queues_ibfk_1")
  clinics             clinics              @relation(fields: [clinic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "queues_ibfk_2")
  examination_records examination_records? @relation(fields: [record_id], references: [id], onUpdate: NoAction, map: "queues_ibfk_3")

  @@index([clinic_id], map: "clinic_id")
  @@index([appointment_id], map: "fk_queues_appointments")
  @@index([patient_id], map: "patient_id")
  @@index([record_id], map: "record_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shifts {
  id             Int              @id @default(autoincrement())
  name           String?          @db.VarChar(100)
  start_time     DateTime?        @db.Time(0)
  end_time       DateTime?        @db.Time(0)
  work_schedules work_schedules[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model users {
  id                                                                Int                         @id @default(autoincrement())
  email                                                             String                      @unique(map: "email") @db.VarChar(255)
  password                                                          String?                     @db.VarChar(255)
  full_name                                                         String?                     @db.VarChar(255)
  date_of_birth                                                     DateTime?                   @db.Date
  gender                                                            users_gender?
  phone                                                             String?                     @db.VarChar(20)
  address                                                           String?                     @db.Text
  role                                                              users_role
  sso_provider                                                      users_sso_provider?         @default(local)
  is_active                                                         Boolean?                    @default(true)
  created_at                                                        DateTime?                   @default(now()) @db.DateTime(0)
  updated_at                                                        DateTime?                   @default(now()) @db.DateTime(0)
  avatar                                                            String?                     @db.LongText
  appointments                                                      appointments[]
  available_slots                                                   available_slots[]
  chats_chats_to_idTousers                                          chats[]                     @relation("chats_to_idTousers")
  chats_chats_send_by_idTousers                                     chats[]                     @relation("chats_send_by_idTousers")
  conversation_participants                                         conversation_participants[]
  doctor_ratings                                                    doctor_ratings[]
  doctors                                                           doctors?
  examination_details                                               examination_details[]
  examination_orders                                                examination_orders[]
  examination_records_examination_records_primary_doctor_idTousers  examination_records[]       @relation("examination_records_primary_doctor_idTousers")
  examination_records_examination_records_created_by_user_idTousers examination_records[]       @relation("examination_records_created_by_user_idTousers")
  patients                                                          patients?
  work_schedules                                                    work_schedules[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model work_schedules {
  id        Int      @id @default(autoincrement())
  user_id   Int
  clinic_id Int
  work_date DateTime @db.Date
  shift_id  Int
  users     users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "work_schedules_ibfk_1")
  clinics   clinics  @relation(fields: [clinic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "work_schedules_ibfk_2")
  shifts    shifts   @relation(fields: [shift_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "work_schedules_ibfk_3")

  @@index([clinic_id], map: "clinic_id")
  @@index([shift_id], map: "shift_id")
  @@index([user_id], map: "user_id")
}

enum payments_method {
  cash
  card
  bank_transfer
  e_wallet
}

enum queues_status {
  waiting
  in_progress
  done
  skipped
}

enum users_gender {
  male
  female
  other
}

enum appointments_status {
  pending
  confirmed
  cancelled
  completed
}

enum examination_details_status {
  pending
  in_progress
  done
  cancelled
}

enum users_role {
  doctor
  nurse
  receptionist
  admin
  patient
}

enum users_sso_provider {
  google
  facebook
  local
}
